/**
 * Grid
 */

// Grid settings (SUSY)

$global-gutter-width: 	3%;

// Column

$columns_s:		6;
$columns_m:		12;
$columns_l:		12;
$columns_xl:	12;


/**
 * Media Query settings
 */

// $bp: 		min / max
$s: 			0, 		640px;
$m: 			641px, 	880px;
$m_up: 			641px, 	false;
$l: 			881px, 	1200px;
$l_up: 			881px, 	false;
$xl: 			1200px, false;

/**
 * At Breakpoint
 */


@mixin at-bp($bp) {
	$min-width          : nth($bp,1);
	$max-width          : nth($bp,2);

	@if($max-width != false){
		@media (min-width: $min-width) and (max-width: $max-width) {
			@content;
		}
	} @else {
		@media (min-width: $min-width) {
			@content;
		}
	}

	@content;

}



@mixin span($span-columns, $total-columns, $omega:''){

	$column-plus-gutter: 	(1 / $total-columns * 100) * 1%;
	$total-gutters: 		$total-columns - 1;
	$gutter-width: 			$global-gutter-width;
	$column-width:  		(100 - ($gutter-width * $total-gutters)) / $total-columns;
	
	// Add additional column and gutter widths when spanning multiple columns

	@if($span-columns > 1){

		$multi-column-width: ($column-width * $span-columns) + ( $gutter-width * ($span-columns - 1) ) ;
		@include grid-css-output($multi-column-width, $omega);

	} @else {

		@include grid-css-output($column-width, $omega);

	}

}

@mixin grid-css-output($width, $omega){

	@if($omega == omega){
		width: $width;
		float: right;
	} @else {
		width: $width;
		margin-right: $gutter-width;
		float: left;
	}
}


.span-1{
	@include span(1,12);
	background: pink;
}

.span-2{
	@include span(2,12);
	background: pink;
}

.span-3{
	@include span(3,12);
	background: pink;
}

.span-1--omega{
	@include span(1,12, omega);
	background: red;
}

//@span-columns(1,6)

@mixin grid_output($class,$cols,$total_cols){
	
	#{$class}{
		@include span-columns($cols,$total_cols);
	}

	#{$class}--omega{
		@include span-columns( $cols omega,$total_cols );
	}

	@each $breakpoint in ('m',$m), ('m_up',$m_up), ('l',$l), ('l_up',$l_up), ('xl',$xl) {
		$bp_name: nth($breakpoint, 1);
		$bp_var: nth($breakpoint, 2);

		#{$class}--#{$bp_name}{
			@include at-breakpoint( $bp_var ){
				@include span-columns( $cols,$total_cols );
			}
		}

		#{$class}--#{$bp_name}--omega{
			@include at-breakpoint( $bp_var ){
				@include span-columns( $cols omega,$total_cols );
			}
		}
	}
}

/*@include grid(6);
@include grid(12, m m_up l l_up xl);

@include susycss( '.grid__1-12',  1,12  );
@include susycss( '.grid__2-12',  2,12  );
@include susycss( '.grid__3-12',  3,12  );
@include susycss( '.grid__4-12',  4,12  );
@include susycss( '.grid__5-12',  5,12  );
@include susycss( '.grid__6-12',  6,12  );
@include susycss( '.grid__7-12',  7,12  );
@include susycss( '.grid__8-12',  8,12  );
@include susycss( '.grid__1-12',  9,12  );
@include susycss( '.grid__10-12', 10,12 );
@include susycss( '.grid__11-12', 11,12 );*/